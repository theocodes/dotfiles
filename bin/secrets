#!/usr/bin/env bash

set -eo pipefail

usage=$(cat <<EOF
  Usage:
    secrets signin               -- signs in with master password in $HOME/.masterpass
    secrets list                 -- lists all secrets in 'command line' vault
    secrets get TITLE            -- gets a field value on a given item
    secrets delete TITLE         -- gets a field value on a given item
    secrets set TITLE VALUE      -- sets a value and field on a given item
  Examples:
    secrets list
    secrets get fastly-qa
    secrets delete fastly-qa
    secrets set fastly-prod "secret key"
EOF
)

if [[ -z $1 ]]; then
  echo "$usage"
  exit 1
fi

if [[ $1 == "get" ]]; then
  [[ -z $2 ]] && echo "$usage" && exit 1

  op get item "$2" --vault="command line" | jq -r '.details.notesPlain'
fi

if [[ $1 == "set" ]]; then
  [[ -z $2 ]] && echo "$usage" && exit 1
  [[ -z $3 ]] && echo "$usage" && exit 1

  encoded=$(op get template "Secure Note" | jq ".notesPlain = \"$3\"" | op encode)
  op create item "Secure Note" "$encoded" --title="$2" --vault="command line" --tags="cli"
fi

if [[ $1 == "otp" ]]; then
  [[ -z $2 ]] && echo "$usage" && exit 1

  token=$(op get totp $2)
  echo $token | xclip -sel clip # system clipboard
  echo $token | xclip # mouse clipboard
  echo $token
fi

if [[ $1 == "delete" ]]; then
  [[ -z $2 ]] && echo "$usage" && exit 1

  op delete item "$2" --vault="command line"
fi

if [[ $1 == "list" ]]; then
  op list items --vault="command line" | jq -r '.[].overview.title'
fi

if [[ $1 == "signin" ]]; then
  op signin felippe
fi

