#!/usr/bin/env ruby

# frozen_string_literal: true

NOTES_DIR = File.expand_path('~/Dropbox/notes')

TEMPLATE = <<~TEMPLATE
  ---
  Title: {title}
  Date: {date}
  Tags: {tags}
  ---
TEMPLATE

TAGS = <<~TAGS
  journal
  dev
TAGS

def create_note(title, tags)
  datetime = Time.now.strftime('%Y%m%dT%H%M%S')

  normalized_title = title.gsub(',', '')
  filename = "#{datetime}--#{normalized_title.downcase.gsub(/\s+/, '-')}__#{tags.join('_')}.md"
  filepath = File.join(NOTES_DIR, filename)

  File.open(filepath, 'w') do |file|
    file.write(TEMPLATE.gsub('{title}', title)
                       .gsub('{date}', datetime)
                       .gsub('{tags}', tags.join(', ')))
  end

  File.join(NOTES_DIR, filename)
end

def create_daily_note
  title = Time.now.strftime('%a, %d %b %Y')
  create_note title, ['daily']
end

def open_file(filepath)
  system("nvim #{filepath}")
end

def run
  command = ARGV.first

  case command
  when 'daily'
    file = create_daily_note
    open_file file
  else
    lines = `fzf -d #{NOTES_DIR} --print-query --border --preview 'glow {}'`.split("\n")
    return if lines.empty?

    title = lines.first
    filepath = lines.last

    if title == ''
      open_file filepath
    else
      lines = `echo "#{TAGS}" | fzf --multi --print-query`.split("\n")
      query = lines.first

      if query == ''
        open_file create_note(title, lines[1..])
      else
        open_file create_note(title, query.split(','))
      end
    end
  end
end

run
