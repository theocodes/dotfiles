#+TITLE: Doom

* Doom modules

#+begin_src emacs-lisp :tangle ~/.doom.d/init.el
(doom! :input
       ;;chinese
       ;;japanese
       ;;layout            ; auie,ctsrnm is the superior home row

       :completion
       ;; company           ; the ultimate code completion backend
       ;;helm              ; the *other* search engine for love and life
       ;;ido               ; the other *other* search engine...
       ;;ivy               ; a search engine for love and life
       vertico           ; the search engine of the future

       :ui
       ;;deft              ; notational velocity for Emacs
       doom              ; what makes DOOM look the way it does
       ;;doom-dashboard    ; a nifty splash screen for Emacs
       doom-quit         ; DOOM quit-message prompts when you quit Emacs
       ;;(emoji +unicode)  ; 🙂
       hl-todo           ; highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
       ;;hydra
       ;;indent-guides     ; highlighted indent columns
       ;;ligatures         ; ligatures and symbols to make your code pretty again
       ;;minimap           ; show a map of the code on the side
       modeline          ; snazzy, Atom-inspired modeline, plus API
       ;;nav-flash         ; blink cursor line after big motions
       neotree           ; a project drawer, like NERDTree for vim
       ophints           ; highlight the region an operation acts on
       (popup +defaults)   ; tame sudden yet inevitable temporary windows
       ;;tabs              ; a tab bar for Emacs
       ;;treemacs          ; a project drawer, like neotree but cooler
       ;;unicode           ; extended unicode support for various languages
       vc-gutter         ; vcs diff in the fringe
       vi-tilde-fringe   ; fringe tildes to mark beyond EOB
       window-select     ; visually switch windows
       workspaces        ; tab emulation, persistence & separate workspaces
       ;;zen               ; distraction-free coding or writing

       :editor
       (evil +everywhere); come to the dark side, we have cookies
       file-templates    ; auto-snippets for empty files
       fold              ; (nigh) universal code folding
       (format +onsave)  ; automated prettiness
       ;;god               ; run Emacs commands without modifier keys
       ;;lispy             ; vim for lisp, for people who don't like vim
       multiple-cursors  ; editing in many places at once
       ;;objed             ; text object editing for the innocent
       ;;parinfer          ; turn lisp into python, sort of
       ;;rotate-text       ; cycle region at point between text candidates
       snippets          ; my elves. They type so I don't have to
       ;;word-wrap         ; soft wrapping with language-aware indent

       :emacs
       dired             ; making dired pretty [functional]
       electric          ; smarter, keyword-based electric-indent
       ;;ibuffer         ; interactive buffer management
       undo              ; persistent, smarter undo for your inevitable mistakes
       vc                ; version-control and Emacs, sitting in a tree

       :term
       eshell            ; the elisp shell that works everywhere
       ;;shell             ; simple shell REPL for Emacs
       ;;term              ; basic terminal emulator for Emacs
       vterm             ; the best terminal emulation in Emacs

       :checkers
       syntax              ; tasing you for every semicolon you forget
       ;;(spell +flyspell) ; tasing you for misspelling mispelling
       ;;grammar           ; tasing grammar mistake every you make

       :tools
       ;;ansible
       ;;biblio            ; Writes a PhD for you (citation needed)
       ;;debugger          ; FIXME stepping through code, to help you add bugs
       ;;direnv
       ;;docker
       ;;editorconfig      ; let someone else argue about tabs vs spaces
       ;;ein               ; tame Jupyter notebooks with emacs
       (eval +overlay)     ; run code, run (also, repls)
       ;;gist              ; interacting with github gists
       lookup              ; navigate your code and its documentation
       lsp               ; M-x vscode
       magit             ; a git porcelain for Emacs
       ;;make              ; run make tasks from Emacs
       ;;pass              ; password manager for nerds
       ;;pdf               ; pdf enhancements
       ;;prodigy           ; FIXME managing external services & code builders
       rgb               ; creating color strings
       ;;taskrunner        ; taskrunner for all your projects
       ;;terraform         ; infrastructure as code
       ;;tmux              ; an API for interacting with tmux
       ;;upload            ; map local to remote projects via ssh/ftp

       :os
       (:if IS-MAC macos)  ; improve compatibility with macOS
       ;;tty               ; improve the terminal Emacs experience

       :lang
       ;;agda              ; types of types of types of types...
       ;;beancount         ; mind the GAAP
       (cc +lsp)         ; C > C++ == 1
       ;;clojure           ; java with a lisp
       ;;common-lisp       ; if you've seen one lisp, you've seen them all
       ;;coq               ; proofs-as-programs
       ;;crystal           ; ruby at the speed of c
       ;;csharp            ; unity, .NET, and mono shenanigans
       ;;data              ; config/data formats
       ;;(dart +flutter)   ; paint ui and not much else
       ;;dhall
       ;;elixir            ; erlang done right
       ;;elm               ; care for a cup of TEA?
       emacs-lisp        ; drown in parentheses
       ;;erlang            ; an elegant language for a more civilized age
       ;;ess               ; emacs speaks statistics
       ;;factor
       ;;faust             ; dsp, but you get to keep your soul
       ;;fortran           ; in FORTRAN, GOD is REAL (unless declared INTEGER)
       ;;fsharp            ; ML stands for Microsoft's Language
       ;;fstar             ; (dependent) types and (monadic) effects and Z3
       (gdscript +lsp)     ; the language you waited for
       (go +lsp)         ; the hipster dialect
       ;;(haskell +lsp)    ; a language that's lazier than I am
       ;;hy                ; readability of scheme w/ speed of python
       ;;idris             ; a language you can depend on
       ;;json              ; At least it ain't XML
       ;;(java +lsp)       ; the poster child for carpal tunnel syndrome
       ;;javascript        ; all(hope(abandon(ye(who(enter(here))))))
       ;;julia             ; a better, faster MATLAB
       ;;kotlin            ; a better, slicker Java(Script)
       ;;latex             ; writing papers in Emacs has never been so fun
       ;;lean              ; for folks with too much to prove
       ;;ledger            ; be audit you can be
       (lua +lsp)               ; one-based indices? one-based indices
       markdown          ; writing docs for people to ignore
       ;;nim               ; python + lisp at the speed of c
       ;;nix               ; I hereby declare "nix geht mehr!"
       ;;ocaml             ; an objective camel
       (org +roam2)               ; organize your plain life in plain text
       ;;php               ; perl's insecure younger brother
       ;;plantuml          ; diagrams for confusing people more
       ;;purescript        ; javascript, but functional
       ;;python            ; beautiful is better than ugly
       ;;qt                ; the 'cutest' gui framework ever
       ;;racket            ; a DSL for DSLs
       ;;raku              ; the artist formerly known as perl6
       ;;rest              ; Emacs as a REST client
       ;;rst               ; ReST in peace
       (ruby +rails)     ; 1.step {|i| p "Ruby is #{i.even? ? 'love' : 'life'}"}
       ;;rust              ; Fe2O3.unwrap().unwrap().unwrap().unwrap()
       ;;scala             ; java, but good
       ;;(scheme +guile)   ; a fully conniving family of lisps
       sh                ; she sells {ba,z,fi}sh shells on the C xor
       ;;sml
       ;;solidity          ; do you need a blockchain? No.
       ;;swift             ; who asked for emoji variables?
       ;;terra             ; Earth and Moon in alignment for performance.
       web               ; the tubes
       yaml              ; JSON, but readable
       ;;zig               ; C, but simpler

       :email
       ;; (mu4e +org)
       ;;notmuch
       ;;(wanderlust +gmail)

       :app
       ;;calendar
       ;;emms
       ;;everywhere        ; *leave* Emacs!? You must be joking
       ;;irc               ; how neckbeards socialize
       ;;(rss +org)        ; emacs as an RSS reader
       ;;twitter           ; twitter client https://twitter.com/vnought

       :config
       ;;literate
       (default +bindings +smartparens))
#+end_src

* General configuration

** fonts

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(setq doom-font (font-spec :family "Iosevka" :size 16 :weight 'regular))
#+end_src

** line numbers

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(setq display-line-numbers-type 'relative)
#+end_src

** keybindings

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(map! :desc "toggle vterm popup" :nvi "s-i" #'+vterm/toggle)
(map! [remap isearch-forward] :desc "Search in active buffer" '+default/search-buffer)
(map! :desc "Switch to previous buffer" :leader "TAB" #'evil-switch-to-windows-last-buffer)
(map! :desc "Find or create org-roam note" :leader "nf" 'org-roam-node-find)
(map! :desc "Capture journal entry for today" :leader "nc" 'org-roam-dailies-capture-today)
(map! :desc "Open today's journal" :leader "nt" 'org-roam-dailies-goto-today)
(map! :desc "Open journal by date" :leader "nd" 'org-roam-dailies-goto-date)
(map! :n "H" #'centaur-tabs-backward)
(map! :n "L" #'centaur-tabs-forward)
(map! :g "<f5>" #'modus-themes-toggle)
#+end_src

* Packages

** projectile

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(setq projectile-project-search-path '("~/Code"))
#+end_src

** org-mode

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el

(use-package! org
  :config
  (setq org-directory "~/org/")
  (setq org-startup-folded t)
  (setq org-ellipsis " ▾")
  (setq org-startup-indented t)
  (setq org-hide-emphasis-markers t)
  (setq org-todo-keywords '((sequence "TODO" "PROGRESS" "BLOCKED" "DONE")))
  (setq org-todo-keyword-faces
      '(("TODO" . org-warning)
          ("PROGRESS" . "yellow")
          ("BLOCKED" . (:foreground "red" :weight bold))
          ("DONE" . org-done)))
  (add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
  (add-to-list 'org-structure-template-alist '("sh" . "src sh"))
  (add-to-list 'org-structure-template-alist '("rb" . "src ruby"))
  (add-to-list 'org-structure-template-alist '("py" . "src python"))
  (add-to-list 'org-structure-template-alist '("go" . "src go"))
  (add-to-list 'org-structure-template-alist '("js" . "src javascript"))
  (add-to-list 'org-structure-template-alist '("cf" . "src emacs-lisp :tangle ~/.doom.d/config.el"))
  (add-to-list 'org-structure-template-alist '("pk" . "src emacs-lisp :tangle ~/.doom.d/packages.el"))
  (add-to-list 'org-structure-template-alist '("in" . "src emacs-lisp :tangle ~/.doom.d/init.el"))
  (require 'org-tempo))
#+end_src

** org-roam

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(setq org-roam-dailies-directory "journal/")
(setq org-roam-directory "~/RoamNotes")
(setq org-roam-completion-everywhere t)
#+end_src

** org-bullets

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el
(package! org-bullets)
#+end_src

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(setq org-bullets-bullet-list '("◉" "○" "●" "○" "●" "○" "●"))
(add-hook! org-mode #'org-bullets-mode)
#+end_src

** corfu

Corfu provides autocompletion that is based on Emacs' =completion-at-point= functionality.

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el
(package! corfu)
#+end_src

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(use-package! corfu
  :custom
  (corfu-auto t)
  (corfu-preselect-first nil)
  (corfu-quit-at-boundary t)
  (corfu-quit-no-match t)
  (corfu-auto-delay 0)
  :bind
  (:map corfu-map
        ("TAB" . corfu-next)
        ([tab] . corfu-next)
        ("S-TAB" . corfu-previous)
        ([backtab] . corfu-previous))

  :init
  (corfu-global-mode))
#+end_src

** cape

Cape provides =completion-at-point= functions to be used by corfu.

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el
(package! cape)
#+end_src

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(use-package! cape
  :init
  (add-to-list 'completion-at-point-functions #'cape-file)
  (add-to-list 'completion-at-point-functions #'cape-dabbrev)
  (add-to-list 'completion-at-point-functions #'cape-keyword)
  (add-to-list 'completion-at-point-functions #'cape-abbrev)
  (add-to-list 'completion-at-point-functions #'cape-symbol))
#+end_src

** kind-icon

This package adds configurable icon or text-based completion prefixes based
on the :company-kind property that many completion backends (such as lsp-mode and
Emacs 28's elisp-mode) provide.

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el
(package! kind-icon)
#+end_src

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(use-package! kind-icon
  :after corfu
  :custom
  (kind-icon-default-face 'corfu-default) ; to compute blended backgrounds correctly
  :config
  (add-to-list 'corfu-margin-formatters #'kind-icon-margin-formatter))
#+end_src

** modus-themes

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el
(package! modus-themes)
#+end_src

#+begin_src emacs-lisp :tangle ~/.doom.d/config.el
(use-package! modus-themes
  :init
  (setq modus-themes-italic-constructs t)
  (setq modus-themes-bold-constructs nil)
  (setq modus-themes-region '(bg-only no-extend))
  (setq modus-themes-org-blocks 'gray-background)
  :config
  (modus-themes-load-themes)
  (modus-themes-load-vivendi))
#+end_src

